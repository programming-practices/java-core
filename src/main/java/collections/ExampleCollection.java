package collections;

import java.util.Collection;

public interface ExampleCollection {
    public static void main(String[] args) {
        Collection collection;
    }
}

/*
-----------------------------------------------------------------------------------------------------------------------
• Stream<E> parallelStream() 8
    Возвращает параллельный поток данных с элементами из исходной коллекции.

boolean add(Е отекm)    Вводит заданный объект в вызывающую коллекцию.
                        Возвращает логическое значение true, если объект
                        успешно введен в коллекцию. А если объект уже
                        присуrствует в коллекции , которая не допускает ду­
                        бли рование объектов, то возвращается логическое
                        значение false

boolean addAll(Collection<?extends Е> с)
                        Вводит все элементы заданной коллекции с в вызы­
                        вающую коллекцию. Возвращает логическое значе­
                        ние true, если коллекция изменена (т.е. все элемен­
                        ты введены ) , а иначе - логическое значение false

void clear()           Удаляет все элементы из вызывающей коллекции

boolean contains(Object object)
                        Возвращает логическое значение true, если задан­
                        ный объект является элементом вызывающей кол­
                        лекции , а иначе - логическое значение false

Ьoolean containsAll(Collection< ? > с)
                        Возвращает логическое значение true, если вызы­
                        вающая коллекция содержит все элементы заданной
                        коллекции с, а и наче - логическое значение false

Ьoolean equals(Object объект)
                        Возвращает логическое значение true, если вызы­
                        вающая коллекция и заданный объект равнозначны,
                        а иначе - логическое значение false

int hashCode()          Возвращает хеш-код вызывающей коллекции

Ьoolean isEmpty()       Возвращает логическое значение true, если вы­
                        зы вающая коллекция пуста, а иначе - логическое
                        значение false

Iterator<E> iterator()  Возвращает итератор для вызывающей коллекции

default Stream<E> parallelStream ()
                        Возвращает поток, использующий вызывающую
                        коллекцию в качестве источника для ввода-вывода
                        элементов. В этом потоке поддерживаются парал­
                        лельные операции ввода-вывода, сели это вообще
                        возможно (добавлен в версии J DК 8)

Ьoolean remove(Object объект)
                        Удаляет один экземпляр объектл из вызывающей
                        коллекции. Возвращает логическое значение true ,
                        если элемент удален, а иначе - логическое значение false

Ьoolean remuveAll(Collection<?> с)
                        Удаляет все элементы заданной коллекции с из
                        вызывающей коллекции . Возвращает логическое
                        значение true, если в конечном итоге коллекция из­
                        меняется (т.е. элементы из нее удален ы ) , а иначе -
                        логическое значение false

default boolean removeIf(Predicate<? super Е> predicate)
                        Удаляет из вызывающей коллекции элементы, удов­
                        летворяющие условию, которое задает предикат (до­
                        бавлен в версии .JDК 8 )

boolean retainAll(Collection<?> сoll)
                        Удаляет из вызывающей коллекции вес элементы,
                        кроме элементов заданной коллекции сoll. Возвращает
                        логическое значение true, если в конечном итоге
                        коллекция изменяется (т.е. элементы из нее удале­ны), а
                        иначе - логическое значение false

int size()              Возвращает количество элементов, содержащихся
                        в коллекции

default Spliterator<E> spliterator()
                        Возвращает итератор-разделитель для вызывающей
                        коллекции (добавлен в версии JDК 8)

default Stream<E> stream()
                        Возвращает поток, использующий вызывающую
                        коллекцию в качестве источника для ввода-вывода
                        элементов. В этом потоке поддерживаются последо­
                        вательные олсрации ввода-вывода (добавлен в вер­
                        сии JDК 8)

Object[] toArray()      Возвращает массив, содержащий все элементы вы­
                        зывающей коллекции. Элементы массива являются
                        копиями элементов коллекции

<Т> Т[] toArray(T[] массив)
                        Возвращает массив, содержащий элементы вызыва­
                        ющей коллекции. Элементы массива являются копи­
                        ями элементов коллекции. Если размер заданного
                        массива равен количеству элементов в коллекции,
                        они возвращаются в этом массиве. Ее.ли же размер
                        массива меньше количества эле ментов в коллекции,
                        то создается и возвращается новый массив нужного
                        размера. А если размер массива больше количества
                        элементов в коллекции, то во всех элементах, сле­
                        дующих за последни м из коллекции, устанавлива­
                        ется пустое значение null. И если любой элемент
                        коллекции относится к типу, не являющемуся под­
                        тилом .массива, то генерируется исключение тила
                        ArrayStoreException

•
Iterator<E> iterator()
Возвращает итератор, который можно использовать для перебора элементов коллекции.
•
int size ()
Возвращает количество элементов, хранящихся в коллекции на данный момент.
•
boolean isEmptyO
Возвращает логическое значение true, если коллекция не содержит ни одного из элементов.
•
boolean contains(Object obj)
Возвращает логическое значение true, если коллекция содержит объект, равный заданному объ­
екту obj.
•
boolean containsAll (Collection<?> other)
Возвращает логическое значение true, если коллекция содержит все элементы из другой кол­
лекции.
•
boolean add (Object element)
Добавляет элемент в коллекцию. Возвращает логическое значение true, если в результате вызова
этого метода коллекция изменилась.
•
boolean addAll (Collections extends E> other)
Добавляет все элементы из другой коллекции в данную. Возвращает логическое значение true,
если в результате вызова этого метода коллекция изменилась.
•
boolean remove(Object obj)
Удаляет из коллекции объект, равный заданному объекту obj. Возвращает логическое значение
true, если в результате вызова этого метода коллекция изменилась.
•
boolean removeAll (Collections> other)
Удаляет из данной коллекции все элементы другой коллекции. Возвращает логическое значение
true, если в результате вызова этого метода коллекция изменилась.
•
default boolean removelf (Predicated super E> filter) 8
Удаляет из данной коллекции все элементы, для которых по заданному условию filter возвра­
щается логическое значение true. Возвращает логическое значение true, если в результате вы­
зова этого метода коллекция изменилась.
•
void clear ()
Удаляет все элементы из данной коллекции.
•
boolean retainAll(Collection<?> other)
Удаляет из данной коллекции все элементы, которые не равны ни одному из элементов другой кол­
лекции. Возвращает логическое значение true, если в результате вызова этого метода коллекция
изменилась.
•
Object[] toArray()
Возвращает из коллекции массив объектов.
•
<Т> Т[] toArray(Т[] arrayToFill)
Возвращает из коллекции массив объектов. Если заполняемый массив arrayToFill имеет до­
статочную длину, он заполняется элементами данной коллекции. Если ж е остается место, добавля­
ются пустые элементы (null). В противном случае выделяется и заполняется новый массив с тем
же типом элементов и длиной, что и у заданного массива arrayToFill.

•
default boolean removalf(Predicated super E> filter) 8
Удаляет из коллекции все совпавшие элементы.

----------------------------------------------------------------------------------------------------------------------

AЬs tractCollection Реал и зует б ольшую часть и нтерфейса Collection
AЬs tractLi s t Рас ш и ряет класс AЬs tractCollection и реал щует б ольшую
часть и нтерфейса Li s t
AЬs tractQueue Р;кш иряет класс AЬs tractCollection и реал изует отдсль·
ныt: •1асти и нтt:рфейса Queue
AЬs tractSequentalLi s t Расширяет класс AЬs tractList для нрименения в коллекци·
ях, щ:п ользующих последовател ьности вместо случайного
доступа к элементам
LinkedList Реализует связный снисок, расш иряя класс
AЬs tractSequentalLis t
ArrayList Реализует динамический массив, расширяя класс
AЬs tractList
ArrayDeque Реализует динамическую двухстороннюю очередь, расширяя
класс AЬs tractCollection и реализуя и нтерфейс Deque
AЬs tractSet Расширяет класс AЬs tractCollection и реалиаует большую
часть и нтерфейса Зеt
EnumSet Расширяет класс AЬs tractSet для применения вместе с эле·
ментами типа enum
HashSet Рас ш и ряет кл асс AЬs tractSet для п рименения вместе
с хеш·таблицами
LinkedНashSet Расширяет класс HashSet, разрешая итерацию с вводом эле·
ментов в оп ределенном порядке
Priori tyQueue Расширяет класс AЬstractQueue для поддержки очередей
по п риоритетам
TreeSet Реалиаует м ножество, хран и мое в древовидной структуре.
Расширяет класс AЬstractSet

----------------------------------------------------------------------------------------------------------------------
*/
