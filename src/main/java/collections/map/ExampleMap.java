package collections.map;

public interface ExampleMap {
    public static void main(String[] args) {

    }
}

/*
----------------------------------------------------------------------------------------------------------------------
Kye v map ne mozet soderzat teze samue znachenia.

Esli v map est klych "34" y poprobyvatu zapusatu ewcho raz etot klych s znacheniem to starui klych s value udalutsa a
novui zapiwetsa.
----------------------------------------------------------------------------------------------------------------------
Отображение представляет собой объект, сохраняющий sviazi между ключами i znacheniami v vide пар "ключ.-.тачение".
По заданному ключу можно найти егозначение. Ключи и значения являются объектами . Ключи м о гут быть однознач­
ными , а :шачения - дублированными. В одних отображениях д о п у с к а ю т с я пустые
ключи и пустые значения , а в других - они нс допускаются.
В отношении о т об р аж е н и й необходимо иметь в в иду следующее: о н и нс реа­
лизу ют и нт е р ф е й с I t e r a Ь l e . Это означает, что перебрать соде р ж и м о е ото fi р а­
ж с н и я , организовав цикл fArgInt o r в с т и л е fArgInt o r e a c h , ие удаrrпсн. J:)олсс топ>, в еЛI,:ш
получить итератор отображения . Но, как будет показано ниже , м о ж н о получ ил,
пр е д с т а в л е н и е отображения в виде коллекции, к о т о р о е до пус к ает п с рс Gо р с о;tс р­
жимого в цикле и л и с 1юмощью и т е р а т о ра .
----------------------------------------------------------------------------------------------------------------------
НАЗАМЕТКУ! Если функция, которая передается методу merge ( ) для вычисления или объединения
значений, возвращает пустое значение n u l l, существующая запись удаляется из отображения.
----------------------------------------------------------------------------------------------------------------------
ВНИМАНИЕ! Применяя метод compute() или merge(), следует иметь в виду, что функция, ко­
торой он снабжается, не должна выполнять много операций. Ведь в процессе выполнения этой
функции может быть заблокирован ряд других обновлений отображения. Безусловно, эта функция
также не должна обновлять другие части отображения.
----------------------------------------------------------------------------------------------------------------------
Mар                     Отображает odnoznachnie klychi na znachenie

Map.Entry               Opisuvat element otobrazenia pary klych-znachenie. Eto vnytrrennii klas interfeisa Map

NavigableMap            Razweriaet intrfeis SortedMap dlya izvlechenia elementov iz itobrazenia po
                        kriteriy poiska naibolie tochnoho sovpadenia

SortedMap               Razweriaet interfeis Map tkum obrazom chtobu kliychi razpolahalis po narostaniy

----------------------------------------------------------------------------------------------------------------------

AЬstractMap              Реализует бальшую часrь инте рфе йса мар

EnumМap                  Расширяет класс AbstractMap для применения вместе с ключами типа еnuш

HаshМар                  Расширяет класс AbstractMap для применения хеш-таблицы

ТrееМар                  Расширяет класс AbstractMap для применения древовидной структуры

WeakHashМap              Расширяет класс AbstractMap для применения хеш"Габлицы со слабы­ми ключами

LinkedНashМap            Расширяет класс HаshМар, разрешая итерацию с вводом элементов в определенном порядке

IdentityHashМap          Расширяет класс AbstractMap и использует результаты проверки ссы­лок
                         на равенсrво при сравнении документов

----------------------------------------------------------------------------------------------------------------------

default V compute(K k, BiFunction<? super К, ? super V, ? extends V> функция)
                                        Вызывает zadanyiy fynkci для посtроeния нового
                                        значения. Если функция возвращает непусrое znаче­
                                        ние, то в отображение вводится новая пара "ключ­
                                        значение", удаляется любая ранее сущесrвовавшая
                                        пара и возвращается новое значение. А если функцuя
                                        возвращает пусrое значение null, то удаляется
                                        любая ранее сущесrвовавшая пара и возвращается
                                        пусrое значение null (добавлен в версииJDК 8)

default V computeifAbsent(К k, Function<? super К, ? extends V> функция )
                                        Возвращает значение, связанное с указанным
                                        ключом k. В противном случае создается новое зна­
                                        чение, для чего вызывается заданная функция, в ото­
                                        бражение вводится новая пара "ключ-значение"
                                        и возвращается созданное значение. Если же новое
                                        значение создать нельзя, то возвращается пустое
                                        значение null (добавлен в версииJDК 8)

default V computeifPresent(K k, BiFunction<? super К, ? super V, ? extends V> функция)
                                        Если в отображении присутствует указанный ключ
                                        k, то для создания нового значения вызывается за­
                                        данная функция и новое значение заменяет прежнее
                                        в агображении. В этом случае возвращается новое
                                        значение. Если же заданная фуюсция возвращает
                                        пусrое значение null, то из отображения удаляются
                                        сущесrвующие в нем ключ и значение и затем воз­
                                        вращается пусrое значение null (добавлен в вер­
                                        сии JDК 8)

void clear()                            Удаляет все пары "ключ-значение" из вызывающего
                                        отображения

Ьoolean containsКey(OЬject k)           Возвращает логическое значение true, если вызы­
                                        вающее агображение содержит указанный ключ k,
                                        а иначе - логическое значение falae

Ьoolean containsValue(OЬject v)         Возвращает логическое значение true, если вызы­
                                        вающее отображение содержит значение v, а ина­
                                        че - логическое значение falae

Set<Map.Entry<К, V>> entrySet()         Возвращает множество типа Set, содержащее все
                                        записи из вызывающего отображения в виде объек­
                                        тов типа Мар . Entry. Следовательно. этот метод воз­
                                        вращает представ.ление вызывающего отображения
                                        в виде множества

Ьoolean equals(Object обbjекm)          Возвращает логическое значение true, если задан­
                                        ный о66е1С111 яв.ляется отображением типа мар, содер­
                                        жащим одинаковые значения, а иначе - логическое
                                        значение false

default void forlEach(BiConsumer<? super к, ? super V> deistvie)
                                        Выполняет заданное действш! над каждым элемен­
                                        том вызывающего отображения. Если в ходе этого
                                        процесса удаляется элемент, то генерируется иcклю­
                                        чeниe типa ConcurrentмodificationException
                                        (добавлен в версииJDК 8)

V qet(Object k)                         Возвращает значение, связанное с указанным клю­
                                        чом k. Если же ключ не найден, то возвращается
                                        пустое значение null

default V getOrDefault(Object k, V заданное_значение)
                                        Возвращает значение, связанное с укааанным клю­
                                        чом k, если оно присутствует в 11ызывающем ото­
                                        бражении, а иначе - заданное_значепие (добаален
                                        в версииJDК 8)

int hAshCocle()                         Возвращает хеш-код вызывающего отображения

boolean isEmpty()                       Возвращает логическое значение true, если вызы­
                                        вающее отображение пусто, а и наче - логическое
                                        значение false

Set<K> keySet()                         Возвращает множество, содержащее ключи из
                                        вызывающего отображения. Следовательно, этот
                                        метод возвращает предстааление ключей в вызы­
                                        ющем отображении в виде множества

default V marge(K k, V v, BiFunotion<? super V, ? super V, ? extends V> functio)
                                        Если в вызывающем отображении опугствует
                                        указанный ключ k, то в него вводится пaра "ключ­
                                        значение", определяемая параметрами k, v, а затем
                                        возвращается значение v. В противном случае задан­
                                        ная функция возвращает новое значение, исходя iz
                                        прежнего значения и ключ обновляется для достуна
                                        к этому значению. а затем оно возвращaется из methoda­
                                        merqe(). Если же заданная функция в оз в р а щ а ет
                                        пустое значение null, то ключ и значения, с;1цс­
                                        сrвующие в вызывающем от ображе ни и . удаляются
                                        из него и затем возвращается пустое з н аче н ие null
                                        (добаален в версииJDК 8)

V put (K k, V v)
                                        Вводит новое значение v в вызьшающее отображе­
                                        ние, перезаписывая любое предшествующее znachenie
                                        связанное с заданным ключом k Возвращает
                                        пустое значение null, если ключ ранее не существо­
                                        вал. В противном случае возвращается предыдущее
                                        znachenie, связанное с ключом

•
V get (Object key)
Получает значение, связанное с ключом, а возвращает объект, связанный с ключом, или же пустое
значение n u l l , если ключ не найден в отображении. В реализующих классах могут быть запреще­
ны пустые ключи типа n u ll.
•
default V getOrDefault (Object key, V defaultValue) 8
Получает значение, связанное с ключом, а возвращает объект, связанный с ключом, или же ука­
занное значение по умолчанию defaultValue, если ключ не найден в отображении.
•
V put (К key, V value)
Размещает в отображении связь ключа со значением. Если ключ уже присутствует, новый объект
заменяет старый, ранее связанный с тем же самым ключом. Этот метод возвращает старое значе­
ние ключа или же пустое значение n u l l , если ключ ранее отсутствовал. В реализующих классах
могут быть запрещены пустые ключи или значения n u l l .
•
void putAll(Map<? extends К, ? extends V > entries)
Вводит все элементы из указанного отображения в данное отображение.
•
boolean containsKey(Object key)
Возвращает логическое значение t r u e , если ключ присутствует в отображении.
•
default void forEach (BiConsumer<? super K,? super V > action) 8
Выполняет действие над всеми парами “ ключ-значение" в данном отображении.
----------------------------------------------------------------------------------------------------------------------
*/
