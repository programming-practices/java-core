package collections.map;

public class ExampleIdentityHashMap {
    public static void main(String[] args) {

    }
}

/*
-----------------------------------------------------------------------------------------------------------------------
Класс IdentityHashMap расширяет класс AbstractMap и реализует интерфейс Мар.Он аналогичен классу HashMap, за исключением
того, что при сравнении элементов отображения в нем выполняется проверка ссылок на равенство. Класс IdentityHashMap является
обобщенным и объявляется следующим образом:
                class IdentityHashМap<K , V>
где К обозначает тип ключей , а V тип хранимых в отображении значений. В документации на прикладной программный интерфейс
API ясно сказано, что класс IdentityHashMap не предназначен для общего применения.
-----------------------------------------------------------------------------------------------------------------------
Класс IdentityHashMap предназначен для построения хеш-отображения идентичности, преследующего особые цели, когда хеш-значения
ключей должны вычисляться не методом hashCode(), а методом System.identityHashCode(). В этом методе для вычисления хеш-кода,
исходя из адреса объекта в памяти, используется метод Object.hashCode(). Кроме того, для сравнения объектов типа IdentityHashMap
применяется операция ==, а не вызов метода equals(). Иными словами, разные объекты-ключи рассматриваются как отличающиеся,
даже если они имеют одинаковое содержимое. Этот класс удобен для реализации алгоритмов обхода объектов (например, сериализации
объектов), когда требуется отслеживать уже пройденные объекты.
-----------------------------------------------------------------------------------------------------------------------
•
Identi tyHashMap ()
•
Identi tyHashMap (int expectedMaxSize)
Конструируют пустое хеш -отображение идентичности, емкость которого равна минимальной сте­
пени 2 , превышающей величину 1 . 5 * expectedMaxSize (по умолчанию значение параметра
expectedMaxSize равно 2 1).
-----------------------------------------------------------------------------------------------------------------------

*/
