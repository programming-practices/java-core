package collections.set;

public interface ExampleSet {
    public static void main(String[] args) {

    }
}

/*
------------------------------------------------------------------------------------------------------------------------
Множество — это совокупность элементов, не содержащая дубликатов. Так, метод add () сначала пытается найти вводимый объект
и вводит его только в том случае, если он отсутствует в множестве.
------------------------------------------------------------------------------------------------------------------------
В интерфейсе Set определяется множество. О н расширяет интерфейс
Collection и определяет поведение коллекций, не допускающих дублирования
элементов. Таким образом, метод add() возвращает логическое значение fal s e
при попытке ввести в множество дублирующий элемент. В этом интерфейсе не
определяется никаких дополнительных методов. Интерфейс S e t является обоб­
щенным и объявляется приведенным ниже образом, где Е обозначает тип объек­
тов, которые должно содержать множество.
---------------------------------------------------------------------------------------------------------------------------------------
 Начнем с того, что Set — это множество (так же называют «набором»). Set не допускает хранение двух одинаковых элементов.
 Формально говоря, термин «множество» и так обозначает совокупность различных элементов, очень важно, что именно различных
 элементов, так как это главное свойство Set. С учетом такого определения, пояснение про хранение одинаковых элементом не требуется,
 но в обиходе, понятие «множество» потеряло свой строгий смысл касательно уникальности элементов,
 входящих в него, поэтому все же уточняйте отдельно данное свойство множества.
----------------------------------------------------------------------------------------------------------------------------------------
 Представляет собой неупорядоченную коллекцию, которая не может содержать дублирующиеся данные.
 Является программной моделью математического понятия «множество»(sequence).
----------------------------------------------------------------------------------------------------------------------------------------
Интерфейс S e t подобен интерфейсу C o ll e c tio n , но поведение его методов
определено более строго. В частности, метод add () должен отвергать дубликаты
во множестве. Метод e q u als () должен быть определен таким образом, чтобы два
множества считались одинаковыми, если они содерж ат одни и те ж е элементы, но
не обязательно в одинаковом порядке. А метод hashCode () должен быть определен
таким образом, чтобы два множества с одинаковыми элементами порождали один
и тот же хеш-код.
----------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------

*/
