package collections.set;

public interface ExampleSortedSet {
    public static void main(String[] args) {

    }
}

/*
---------------------------------------------------------------------------------------------------------------------
Расширяет интерфейс Set для управления агсортированными множествами
----------------------------------------------------------------------------------------------------------------------
Интерфейс SortedSet расширяет интерфейс Set и определяет поведение
множеств, отсортированных в порядке возрастания. Интерфейс SortedSet яв­
ляется обобщенным и объявляется приведенным ниже образом, где Е обозначает
тип объектов, которые должно содержать множество.
interface SortedSet<E>
Помимо методов, предоставляемых интерфейсом Sеt, в интерфейсе SоrtеdSеt
объявляются методы. Некоторые и з них генерируют
исключение типа NoSuchElementException, если в вызывающем множестве от­
сутствуют какие-нибудь элементы. Исключение типа С1аssCastЕхсерtion генери­
руется, если заданный объект нeсовместим с элементами множества. Исключение
типа NullPointerException генерируется при попытке использовать пустой
объект, когда пустое значение null в множестве недопустимо. А при указании не­
верного аргумента генерируется исключение типа IllegalArgumentException.
В интерфейсе SortedSet определен ряд методов, упрощающих обработку эле­
ментов множеств. Чтобы получить первый элемент в отсортированном множе­
стве, достаточно вызвать метод first() , а чтобы получить последний элемент -
метод last(). Из отсортированного множества можно получить подмножество,
вызвав метод subSet() и указав первый и последний элементы множества. Если
требуется получить подмножество, которое начинается с первого элемента суще­
ствующего множества, следует вызвать метод headSet(). А если требуется полу­
чить подмножество, которое начинается с последнего элемента существующего
множества, следует вызвать метод tailSet().
----------------------------------------------------------------------------------------------------------------------
Для формирования поддиапазонов отсортированных множеств и отображений задается порядок сортировки, а не позиции элементов.
С этой целью в интерфейсе
                SortedSet объявляются три метода:
                SortedSet<E> subs et(Е from, Е to)
                SortedSet<E> headset(E to)
                SortedSet<E> tailSet(E from)
Все они возвращают подмножества всех элементов, которые больше или равны значению параметра from и меньше значения
параметра to. А для отсортированных отображений аналогичные методы возвращают представления отображений, состоящие из всех
элементов, в которых ключи находятся в заданном поддиапазоне. Все эти методы перечислены ниже.
                SortedMap<K, V> subMap(K from, К to)
                SortedMap<K, V> headMap(K to)
                SortedMap<K, V> tailMap(K from)
----------------------------------------------------------------------------------------------------------------------

Comparator<? super Е> comparator()
                            Возвращает компаратор отсортированного множества.
                            Если для множества выбирается естественный порядок со­
                            ртировки, то возвращается пустое значение null

E first()                   Возвращает первый элемент вызывающего отсортирован-
                            ного множества

SortedSet<E> headSet(E konec)
                            Возвращает объект типа SortedSet, содержащий элемен­
                            ты из вызывающего отсортированного множества, кото­
                            рые предшествуют элементу, определяемому параметром
                            конец. Ссылки на элементы из возвращаемого отсортиро­
                            ванного множества сохраняются и в вызывающем отсо­
                            ртированном множестве

E last()                    Возвращается последни й элемент из вызывающего отсо­
                            ртированного множества

SortedSet<E> subSet(E nachalo, E konec)
                            Возвращает объект типа SortedSet, которы й включает
                            в себя элементы, начиная с позиции начало и до позиции
                            конец- 1. Ссылки на элементы из возвращаемого отсорти-
                            рованного множества сохраняются и в вызывающем отсо­
                            ртированном множестве

SortedSet<E> tailSet(E nachalo)
                            Возвращает объект типа SortedSet, содержащий элемен­
                            ты из вызывающего множества, которые следуют после
                            элемента на заданной позиции начало. Ссылки на элемен­
                            ты из возвращаемого отсортированного множества сохра­
                            няются и в вызывающем отсорти рованном множестве

•
Comparator^ super E> comparator ()
Возвращает компаратор для сортировки элементов или пустое значение null, если элементы
сравниваются методом сохпаргеТоО из интерфейса Comparable.
•
Е first ()
•
Е last ()
Возвращают наименьший и наибольший элементы из отсортированного множества.

•
SortedSet<E> subset (E firstIncluded, E firstExcluded)
•
SortedSet<E> headset (E firstExcluded)
•
SortedSet<E> tailSet(E firstIncluded)
Возвращают представление элементов отсортированного множества в заданном диапазоне.
----------------------------------------------------------------------------------------------------------------------
*/
