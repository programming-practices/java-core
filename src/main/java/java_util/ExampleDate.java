package java_util;

import java.util.Date;

public class ExampleDate {
    public static void main(String[] args) {
//--------------------------------------------------------------------------------------------------------------------
        // Show date and time using only Date methods.
        // Instantiate age Date object
        Date date = new Date();

        // display time and date using toString()
        System.out.println(date);

        // Display number of milliseconds since midnight, January 1, 1970 GMT
        long msec = date.getTime();
        System.out.println("Milliseconds since Jan. 1, 1970 GMT = " + msec);
//--------------------------------------------------------------------------------------------------------------------
    }
}


/*
----------------------------------------------------------------------------------------------------------------------
Класс Da te инкапсулирует текущую дату и время. Прежде чем рассматривать
класс Da t e , следует заметить, что этот класс ощугимо изменился по сравнению
с его первоначальным вариантом, определенным в версииjаvа 1 .0. Когда была вы­
пуще на версия Java 1 . 1 , многие функции исходного класса Da te были перемещены
в классы Cal endar и Da te Forrnat и, как следствие, многие исходные методы клас­
са Date из версии Java 1 .0 стали не рекомендованными к употреблению в новом
коде, поэтому они здесь и не обсуждаются. В классе Da t e поддерживаются следую­
щие конструкторы:
Date ( )
Date (long ЮUUDtсежунд)
Первый конструктор инициал изирует объект текущими датой и временем.
А второй конструктор принимает оди н аргумент, обо:шачающий коли ч е ст во
милли се кунд, прошедших с полуночи 1 января 1 970 1�
----------------------------------------------------------------------------------------------------------------------
Ьoolean after (Date дата) Возвращает логическое значение true, если вызываю­
щий объект типа Date содержит более позднюю дату,
чем указанная дата, а иначе - логическое зн ачение
false
Ьoolean Ьefore ( Date дата) Возвращает логическое зн ачение true, если вызыва­
ющий объект типа Date содержит более раннюю дату,
•1ем указанная дата, а иначе - логическое значение
OЬj ect clone ( ) Дублирует вызывающий объект типа Date
int compareTo (Date дата) Сравн ивает значение вызывающе!'о объекта с указан­
ной датой. Возвращает нулевое значение, если срав-
ниваемые значения равны; отрицательное значение,
если вызывающий объект содержит более раннюю
дату, чем указанная дата; или положительное значе­
ние, если вызывающий объект содержит более позд­
нюю дату
Ьoolean equals (Object дата) Возвращает логическое значение true, если вызыва­
ющий объект типа Date содержит те же самые время
и дату, что и указанная дата, а иначе - логическое зна­
чение false
lonq qetTiшe ( ) Возвращает количество миллисекунд, прошедших
с полуночи 1 января 1 970 г.
in t hashCode ( ) Возвращает хеш-код вызывающего объекта
void setTime (lonq время) Устанавливает время и дату в соответствии с параме­
тром время, который обозначает количество миллисе­
кунд, прошедших с полуночи 1 января 1 970 г.
Strinq toS trinq ( ) Преобразует вызывающий объект типа Date в сим­
вольную строку и возвращает результат
----------------------------------------------------------------------------------------------------------------------
*/