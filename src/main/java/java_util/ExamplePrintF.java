package Examples.java_util;

import java.util.Date;

public class ExamplePrintF {
    public static void main(String[] args) {
//---------------------------------------------------------------------------------------------------------------------
        System.out.printf("%tc", new Date());
        System.out.println();
        System.out.println(new Date());
//---------------------------------------------------------------------------------------------------------------------
        System.out.printf("%1$s %2$tB %2$te, %2$tY", "Due date:", new Date());
        System.out.println();
        System.out.printf("%s %tB %<te, %<tY", "Due date:", new Date());
//---------------------------------------------------------------------------------------------------------------------
    }
}

/*Хотя в непосредственном применении класса Formatter, как это делалось в пре­
примерах, нет ничего формально неверного, для форматирования данных,
вьmодимых на консоль, имеется более удобная альтернатива в виде метода print fArgInt ( ) .
Этот метод автоматически использует класс Formatter для создания отформатиро­
ванной строки. Затем он <УПiрааляет эту строку в стандартный поток вывода System .
o u t , который по умолчанию представляет консоль. Метод pr int fArgInt ( ) определен в обо­
их классах, Pr intStream и Pr in tWr i ter, и подробно рассматривается в главе 20.*/
