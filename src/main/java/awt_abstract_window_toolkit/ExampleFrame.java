package awt_abstract_window_toolkit;

public class ExampleFrame {
    public static void main(String[] args) {

    }
}

/*
-----------------------------------------------------------------------------------------------------------------------
В языке Java фреймы предназначены именно для того, чтобы служить контейнерами для компонентов (например, меню или других
элементов пользовательского интерфейса). Как правило, рисунки выводятся в другом компоненте, который добавляется во фрейм.
-----------------------------------------------------------------------------------------------------------------------
Оказывается, что структура класса JFrame довольно сложная. Его внутреннее строение показано на рис. 10.8. Как видите, класс
JFrame состоит из четырех областей, каждая из которых представляет собой отдельную панель. Корневая, многослойная и прозрач­
ная панели не представляют особого интереса. Они нужны лишь для оформления меню и панели содержимого в определенном стиле.
Наиболее интересной для применения библиотеки Swing является панель содержимого. При оформлении фрейма его компоненты
добавляются на панели содержимого с помощью следующего кода:
                        Container contentPane = frame.getContentPane();
                        Component c =...
                        contentPane.add(c) ;
-----------------------------------------------------------------------------------------------------------------------
•
boolean isResizableO
•
void setResizable (boolean b)
Получают или устанавливают свойство resizable. Если это свойство установлено, то пользова­
тель может изменять размеры фрейма.
•
Image getlconlmageO
•
void setlconlmage (Image i m a g e )
Получают или устанавливают свойство iconlmage, определяющее пиктограмму фрейма. Оконная
система может отображать пиктограмму как часть оформления фрейма или в каком-нибудь другом
месте.
•
boolean isUndecoratedO 1.4
•
void setUndecorated (boolean b ) 1.4
Получают или устанавливают свойство undecorated. Когда свойство установлено, фрейм отобра­
жается без таких подробностей оформления, как строка заголовка или кнопка закрытия. Этот метод
должен быть вызван до отображения фрейма.
•
int getExtendedState() 1.4
•
void setExtendedState(int s t a t e ) 1.4
Получают или устанавливают расширенное состояние окна. Параметр s t a t e может принимать
следующие значения:
Frame. NOBMAL
Frame.ICONIFIED
Fr a m e .MAXIMIZED _HORIZ
Frame.М А Х Ш 1 ZED_VERT
Frame.MAXIMIZED BOTH
-----------------------------------------------------------------------------------------------------------------------
*/