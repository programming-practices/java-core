package Examples.Reflection_API;

public class ExampleReflectionMethod {
}

/*
----------------------------------------------------------------------------------------------------------------------
public Object invoke (Object inplicitParameter, Object [] explici tParameters)
    Вызывает метод, описанный в объекте, передавая ему заданные параметры и возвращая значе­
    ние, вычисленное этим методом. Для статических методов в качестве неявного параметра пере­
    дается пустое значение n u l l . Примитивные типы следует передавать только в виде объектных
    оболочек классов. Возвращаемые значения примитивных типов должны извлекаться из объектных
    оболочек путем автораспаковки.

•Class getDeclaringClass()
    Возвращает объект типа Class, соответствующий классу, в котором определен заданный конструк­
    тор, метод или поле.

•Class [ ] getExceptionTypes () (в классах Constructor и Method)
    Возвращает массив объектов типа Class, представляющих типы исключений, генерируемых за ­
    данным методом.

•int getModifiers ()
    Возвращает целое значение, соответствующее модификатору заданного конструктора, метода или
    поля. Для анализа возвращаемого значения следует использовать методы из класса Modifier.

•String getName()
    Возвращает символьную строку, в которой содержится имя конструктора, метода или поля.

•Class[] getParameterTypes () (в классах Constructor и Method)
    Возвращает массив объектов типа Class, представляющих типы параметров.

•Class getRetumType() (в классе Method)
    Возвращает объект тип Class, соответствующий возвращаемому типу.

•TypeVariable[] getTypeParameters() 5.0
    Получает переменные обобщенного типа, если этот тип был объявлен как обобщенный, а иначе массив нулевой длины.

•Type getGenericRetumType() 5.0
    Получает обобщенный возвращаемый тип, с которым был объявлен данный метод.

•Туре[] getGenericParaxneterTypes() 5.0
    Получает обобщенные типы параметров, с которыми был объявлен данный метод. Если у метода отсутствуют параметры,
    возвращается массив нулевой длины.
----------------------------------------------------------------------------------------------------------------------
*/
