package multithreading;

public class ExamplePriorityBlockingQueue {

    public static void main(String[] args) {

    }

}

/*
-----------------------------------------------------------------------------------------------------------
PriorityBlockingQueue — это блокирующая очередь по приоритету, а не про­
сто действующая по принципу "первым пришел — первым обслужен". Элементы
удаляются из такой очереди по их приоритетам. Эта очередь имеет неограниченную
емкость, но при попытке извлечь элемент из пустой очереди происходит блокирова­
ние. (Подробнее об очередях по приоритету см. в главе 9.)
-----------------------------------------------------------------------------------------------------------
•LinkedBlockingQueueO
•LinkedBlockingDeque()
	Конструируют неограниченную блокирующую одностороннюю или двустороннюю очередь, реализо­
	ванную в виде связного списка.
	
•LinkedBlockingQueue(int capacity)
•LinkedBlockingDeque (int capaci ty)
	Конструируют ограниченную блокирующую одно- или двухстороннюю очередь, реализованную
	в виде связного списка.
	
•Priori tyBlockingQueue()
•Priori tyBlockingQueue (int initialCapacity)
•Priori tyBlockingQueue (int initialCapacity, Comparator<super E> comparator)
	Конструируют неограниченную блокирующую очередь по приоритетам, реализованную в виде “кучи”.
		Параметры:  ini tialCapacity  Исходная емкость очереди
									  по приоритетам. По умолчанию она равна 11
						  comparator  Компаратор, используемый для
									  сравнения элементов очереди. Если
									  он указан, то элементы очереди
									  должны реализовывать интерфейс Comparable
-----------------------------------------------------------------------------------------------------------
*/
