package date_api;

import java.util.Calendar;
import java.util.GregorianCalendar;

public class ExampleGregorianCalendar {
    public static void main(String[] args) {
//--------------------------------------------------------------------------------------------------------------------
        /*В более ранней версии стандартной библиотеки Java имелся другой класс
        GregorianCalender, предназначенный для обращения с календарями. Ниже показа­
        но, как добавить тысячу дней к дате, представленной этим классом.*/

        GregorianCalendar calendar = new GregorianCalendar(1999, 11, 31);
        // В этом класса месяцы нумеруются от 0 до 11
        calendar.add(Calendar.DAY_OF_MONTH, 1000);

        /*В отличие от метода LocalDate.plusDays(), метод GregorianCalendar.add()
        является модифицирующим. После его вызова состояние объекта someDay изменяет­
        ся. Ниже показано, как определить это новое состояние. Переменная была названа
        someDay, а не newYearsEve потому, что она больше не содержит канун нового года
        после вызова модифицирующего метода.*/

        int year = calendar.get(Calendar.YEAR); // 2002 г.
        int month = calendar.get(Calendar.MONTH) + 1; // 9-й месяц
        int day = calendar.get(Calendar.DAY_OF_MONTH); // 26-е число

        System.out.println("year = " + year + ", mounth = " + month + ", day = " + day);
//--------------------------------------------------------------------------------------------------------------------
    }
}

/*
//--------------------------------------------------------------------------------------------------------------------
    В этом классe месяцы нумеруются от 0 до 11
//--------------------------------------------------------------------------------------------------------------------
*/
