package exceptions;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.Map;

public class ExampleStackTraceElemet {
    public static void main(String[] args) {
//--------------------------------------------------------------------------------------------------------------------
        Throwable t = new Throwable();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        t.printStackTrace(new PrintStream(out));
        String description = out.toString();
        System.out.println(description);
//--------------------------------------------------------------------------------------------------------------------
        Throwable tw = new Throwable();
        StackTraceElement[] frames = tw.getStackTrace();
        for (StackTraceElement frame : frames) {
            // проанализировать фрейм
            System.out.println(frame.toString());
        }
//--------------------------------------------------------------------------------------------------------------------
        Map<Thread, StackTraceElement[]> map = Thread.getAllStackTraces();
        for (Thread tQ : map.keySet()) {
            StackTraceElement[] framesQ = map.get(tQ);
            // проанализировать фрейм

        }
//--------------------------------------------------------------------------------------------------------------------
    }
}

/*
----------------------------------------------------------------------------------------------------------------------
•String getFileName()
    Получает имя исходного файла, содержащего точку, в которой выполняется данный элемент. Если эти сведения недоступны,
    возвращается пустое значение null.

•int getLineNumber()
    Получает номер строки кода, содержащей точку, в которой выполняется данный элемент. Если эти сведения недоступны,
    возвращается значение - 1 .

•String getClassName()
    Возвращает полное имя класса, содержащего точку, в которой выполняется данный элемент.

•String getMethodName()
    Возвращает имя метода, содержащего точку, в которой выполняется данный элемент. Имя конструктора — <init>, а имя
    статического инициализатора — <clinit>. Перегружаемые методы с одинаковыми именами не различаются.

•boolean isNativeMethod()
    Возвращает логическое значение true, если точка выполнения данного элемента находится в платформенно-ориентированном методе.

•String toString()
    Возвращает отформатированную символьную строку, содержащую имя класса и метода, а также имя файла и номер строки
    кода (если эти сведения доступны).
----------------------------------------------------------------------------------------------------------------------
*/
